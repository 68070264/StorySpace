// static/todo.js (‡∏â‡∏ö‡∏±‡∏ö‡∏°‡∏µ "‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏≥" - localStorage)

function initTodoApp() {
    
    console.log("initTodoApp() is called! (localStorage mode)");

    // --- 1. ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ Element ‡∏´‡∏•‡∏±‡∏Å ---
    const modalBody = document.querySelector('#todoModal .modal-body-content');
    if (!modalBody) { /* ... (error) ... */ return; }

    const controller = modalBody.querySelector('#todo-controller');
    const taskInput = modalBody.querySelector('#task-input');
    const taskList = modalBody.querySelector('#task-list');

    if (!controller || !taskInput || !taskList) { /* ... (error) ... */ return; }

    // --- 2. "‡∏™‡∏°‡∏≠‡∏á" ‡∏Ç‡∏≠‡∏á‡πÅ‡∏≠‡∏õ: Array ‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡πá‡∏ö Task ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î ---
    let tasks = []; // ‡∏ô‡∏µ‡πà‡∏Ñ‡∏∑‡∏≠ "‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏£‡∏¥‡∏á" (Single Source of Truth)
    const STORAGE_KEY = 'myStorySpaceTasks'; // ‡∏ä‡∏∑‡πà‡∏≠ "‡∏ï‡∏π‡πâ‡πÄ‡∏ã‡∏ü" ‡∏Ç‡∏≠‡∏á‡πÄ‡∏£‡∏≤

    // --- 3. ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô "‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏≥" (Save/Load/Render) ---

    // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô "‡∏ß‡∏≤‡∏î‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠" 
    // (‡∏à‡∏∞‡∏ß‡∏≤‡∏î‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÇ‡∏î‡∏¢‡∏≠‡∏¥‡∏á‡∏à‡∏≤‡∏Å "‡∏™‡∏°‡∏≠‡∏á" ‡∏Ñ‡∏∑‡∏≠ Array 'tasks')
    function render() {
        console.log("Rendering tasks...", tasks);
        
        taskList.innerHTML = ''; // ‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå‡∏Ç‡∏≠‡∏á‡πÄ‡∏Å‡πà‡∏≤‡∏ó‡∏¥‡πâ‡∏á

        if (tasks.length === 0) {
            taskList.innerHTML = '<li>No tasks yet. Add one!</li>';
            return;
        }

        tasks.forEach(task => {
            const li = document.createElement('li');
            
            // üåü ‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç: ‡πÄ‡∏£‡∏≤‡πÄ‡∏Å‡πá‡∏ö ID ‡πÑ‡∏ß‡πâ‡πÉ‡∏ô data-id
            li.dataset.id = task.id; 
            
            // üåü ‡πÄ‡∏£‡∏≤‡πÉ‡∏ä‡πâ task.name ‡∏à‡∏≤‡∏Å "‡∏™‡∏°‡∏≠‡∏á"
            li.innerHTML = `
                <span class_name="todo-text" data-action="DELETE_TASK" style="cursor: pointer;">${task.name}</span>
            `;
            taskList.appendChild(li);
        });
    }

    // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô "‡πÄ‡∏ã‡∏ü‡∏•‡∏á‡∏ï‡∏π‡πâ‡πÄ‡∏ã‡∏ü"
    function saveTasks() {
        console.log("Saving to localStorage...", tasks);
        // localStorage ‡πÄ‡∏Å‡πá‡∏ö‡πÑ‡∏î‡πâ‡πÅ‡∏Ñ‡πà "‡∏ï‡∏±‡∏ß‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠" ‡πÄ‡∏£‡∏≤‡∏à‡∏∂‡∏á‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏õ‡∏•‡∏á Array ‡πÄ‡∏õ‡πá‡∏ô JSON string
        localStorage.setItem(STORAGE_KEY, JSON.stringify(tasks));
    }

    // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô "‡πÇ‡∏´‡∏•‡∏î‡∏à‡∏≤‡∏Å‡∏ï‡∏π‡πâ‡πÄ‡∏ã‡∏ü"
    function loadTasks() {
        const tasksFromStorage = localStorage.getItem(STORAGE_KEY);
        if (tasksFromStorage) {
            // ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏Ç‡∏≠‡∏á‡πÄ‡∏Å‡πà‡∏≤ ‚û° ‡πÅ‡∏õ‡∏•‡∏á JSON string ‡∏Å‡∏•‡∏±‡∏ö‡πÄ‡∏õ‡πá‡∏ô Array ‡πÅ‡∏•‡πâ‡∏ß‡∏¢‡∏±‡∏î‡πÉ‡∏™‡πà "‡∏™‡∏°‡∏≠‡∏á"
            tasks = JSON.parse(tasksFromStorage);
            console.log("Loaded tasks from localStorage:", tasks);
        } else {
            console.log("No tasks found in storage.");
        }
    }

    // --- 4. ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô "‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£" (‡πÄ‡∏û‡∏¥‡πà‡∏°/‡∏•‡∏ö) ---

    // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö "‡πÄ‡∏û‡∏¥‡πà‡∏°" ToDo
    function addTodoItem() {
        const taskName = taskInput.value.trim();
        if (taskName === '') return;

        // 1. ‡∏™‡∏£‡πâ‡∏≤‡∏á "‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏" (Object) ‡∏Ç‡∏≠‡∏á Task ‡πÉ‡∏´‡∏°‡πà
        const newTask = {
            // ‡πÄ‡∏£‡∏≤‡πÉ‡∏ä‡πâ‡πÄ‡∏ß‡∏•‡∏≤ (‡∏°‡∏¥‡∏•‡∏•‡∏¥‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ) ‡πÄ‡∏õ‡πá‡∏ô ID ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡πÑ‡∏°‡πà‡∏ã‡πâ‡∏≥‡∏Å‡∏±‡∏ô
            id: Date.now(), 
            name: taskName,
            completed: false // (‡πÄ‡∏ú‡∏∑‡πà‡∏≠‡πÑ‡∏ß‡πâ‡πÉ‡∏ä‡πâ‡πÉ‡∏ô‡∏≠‡∏ô‡∏≤‡∏Ñ‡∏ï)
        };

        // 2. ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏Ç‡πâ‡∏≤ "‡∏™‡∏°‡∏≠‡∏á" (Array)
        tasks.push(newTask);
        
        // 3. ‡πÄ‡∏ã‡∏ü
        saveTasks();
        
        // 4. ‡∏ß‡∏≤‡∏î‡πÉ‡∏´‡∏°‡πà
        render();

        taskInput.value = ''; // ‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå‡∏ä‡πà‡∏≠‡∏á input
    }
    
    // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö "‡∏•‡∏ö" ToDo
    function deleteTodoItem(taskId) {
        // 1. ‡∏Å‡∏£‡∏≠‡∏á "‡∏™‡∏°‡∏≠‡∏á" (Array) ‚û° ‡πÄ‡∏≠‡∏≤‡πÄ‡∏â‡∏û‡∏≤‡∏∞ Task ‡∏ó‡∏µ‡πà ID "‡πÑ‡∏°‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö" ‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏•‡∏ö
        tasks = tasks.filter(task => task.id.toString() !== taskId);
        
        // 2. ‡πÄ‡∏ã‡∏ü
        saveTasks();
        
        // 3. ‡∏ß‡∏≤‡∏î‡πÉ‡∏´‡∏°‡πà
        render();
    }


    // --- 5. "‡∏´‡∏π‡∏ü‡∏±‡∏á" (Event Listeners) ---
    if (controller.dataset.listenerAttached === 'true') {
        console.log("Listeners already attached.");
    } else {
        console.log("Attaching main event listener...");
        
        controller.addEventListener('click', (event) => {
            const action = event.target.dataset.action;

            if (action === 'ADD_TASK') {
                addTodoItem(); // üåü ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÉ‡∏´‡∏°‡πà
            }
            
            if (action === 'DELETE_TASK') {
                if (confirm('‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏ö Task ‡∏ô‡∏µ‡πâ‡πÉ‡∏ä‡πà‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?')) {
                    // üåü ‡∏´‡∏≤ ID ‡∏à‡∏≤‡∏Å <li> ‡πÅ‡∏•‡πâ‡∏ß‡∏™‡πà‡∏á‡πÑ‡∏õ‡πÉ‡∏´‡πâ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏•‡∏ö
                    const li = event.target.closest('li');
                    deleteTodoItem(li.dataset.id); 
                }
            }
        });
        
        taskInput.addEventListener('keypress', (e) => {
            if (e.key === 'Enter') {
                addTodoItem();
            }
        });
        
        controller.dataset.listenerAttached = 'true';
    }
    
    // --- 6. ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÅ‡∏£‡∏Å ---
    loadTasks(); // üåü ‡πÄ‡∏õ‡∏¥‡∏î‡∏ï‡∏π‡πâ‡πÄ‡∏ã‡∏ü
    render();    // üåü ‡∏ß‡∏≤‡∏î‡∏Ç‡∏≠‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏à‡∏≠

}

// --- "‡∏™‡πà‡∏á‡∏≠‡∏≠‡∏Å" (Export) ---
window.initTodoApp = initTodoApp;