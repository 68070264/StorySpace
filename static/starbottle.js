// static/starMemory.js (‡∏â‡∏ö‡∏±‡∏ö‡∏≠‡∏±‡∏õ‡πÄ‡∏Å‡∏£‡∏î "2 ‡∏ï‡∏π‡πâ‡πÄ‡∏ã‡∏ü")

// üåü 1. ‡πÄ‡∏£‡∏≤‡∏°‡∏µ "‡∏Å‡∏∏‡∏ç‡πÅ‡∏à" 2 ‡∏î‡∏≠‡∏Å
const ACTIVE_KEY = 'myStorySpace_ActiveTasks';
const ARCHIVE_KEY = 'myStorySpace_ArchivedTasks';

<<<<<<< HEAD
// --- 1. ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô "‡πÇ‡∏´‡∏•‡∏î‡∏à‡∏≤‡∏Å‡∏ï‡∏π‡πâ‡πÄ‡∏ã‡∏ü" ---
/*(function loadTasksFromMemory() {
    const tasksFromStorage = localStorage.getItem(STORAGE_KEY);
    if (tasksFromStorage) {
        // ‡πÅ‡∏õ‡∏•‡∏á JSON string ‡∏Å‡∏•‡∏±‡∏ö‡πÄ‡∏õ‡πá‡∏ô Array
        console.log("starMemory: Loaded tasks from localStorage.");
        return JSON.parse(tasksFromStorage);
    } else {
        // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡∏≠‡∏á ‚û° ‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô Array ‡∏ß‡πà‡∏≤‡∏á‡πÄ‡∏õ‡∏•‡πà‡∏≤
        console.log("starMemory: No tasks found. Returning empty array.");
        return [];
=======
// --- "‡∏ï‡∏π‡πâ‡πÄ‡∏ã‡∏ü" ‡∏ó‡∏µ‡πà 1: Active Tasks ---

function loadActiveTasks() {
    const tasksFromStorage = localStorage.getItem(ACTIVE_KEY);
    // (‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡∏≠‡∏á ‚û° ‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô Array ‡∏ß‡πà‡∏≤‡∏á‡πÄ‡∏õ‡∏•‡πà‡∏≤)
    return tasksFromStorage ? JSON.parse(tasksFromStorage) : [];
}

function saveActiveTasks(activeTasksArray) {
    console.log("starMemory: Saving ACTIVE tasks...", activeTasksArray);
    localStorage.setItem(ACTIVE_KEY, JSON.stringify(activeTasksArray));
}

// --- "‡∏ï‡∏π‡πâ‡πÄ‡∏ã‡∏ü" ‡∏ó‡∏µ‡πà 2: Archived Tasks ---

function loadArchivedTasks() {
    const tasksFromStorage = localStorage.getItem(ARCHIVE_KEY);
    // (‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡∏≠‡∏á ‚û° ‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô Array ‡∏ß‡πà‡∏≤‡∏á‡πÄ‡∏õ‡∏•‡πà‡∏≤)
    return tasksFromStorage ? JSON.parse(tasksFromStorage) : [];
}

function saveArchivedTasks(archivedTasksArray) {
    console.log("starMemory: Saving ARCHIVED tasks...", archivedTasksArray);
    localStorage.setItem(ARCHIVE_KEY, JSON.stringify(archivedTasksArray));
}

// --- üåüüåüüåü 3. ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô "‡∏¢‡πâ‡∏≤‡∏¢‡∏Ç‡∏≠‡∏á" (‡∏™‡πà‡∏á Payload) üåüüåüüåü ---
// ‡∏ô‡∏µ‡πà‡∏Ñ‡∏∑‡∏≠‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏£‡∏±‡∏ö "Payload" (tasksToArchive) ‡∏à‡∏≤‡∏Å todo.js
function archiveTasks(tasksToArchive) {
    if (!tasksToArchive || tasksToArchive.length === 0) {
        return; // ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏≠‡∏∞‡πÑ‡∏£‡πÉ‡∏´‡πâ‡∏¢‡πâ‡∏≤‡∏¢
>>>>>>> 072244f7a877ca92dba6c78f1f9494b3fc7da993
    }
    
    console.log("starMemory: Received payload to archive...", tasksToArchive);
    
    // 1. ‡πÇ‡∏´‡∏•‡∏î "‡∏Ç‡∏≠‡∏á‡πÄ‡∏Å‡πà‡∏≤" (‡∏ó‡∏µ‡πà‡πÄ‡∏Ñ‡∏¢‡πÄ‡∏Å‡πá‡∏ö‡πÑ‡∏ß‡πâ) ‡∏à‡∏≤‡∏Å‡∏ï‡∏π‡πâ Archive
    const currentArchive = loadArchivedTasks();
    
    // 2. "‡∏£‡∏ß‡∏°" ‡∏Ç‡∏≠‡∏á‡πÄ‡∏Å‡πà‡∏≤ + ‡∏Ç‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà (Payload)
    const newArchive = currentArchive.concat(tasksToArchive);
    
    // 3. "‡πÄ‡∏ã‡∏ü" ‡∏Ç‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏£‡∏ß‡∏°‡πÅ‡∏•‡πâ‡∏ß ‡∏Å‡∏•‡∏±‡∏ö‡πÄ‡∏Ç‡πâ‡∏≤‡∏ï‡∏π‡πâ Archive
    saveArchivedTasks(newArchive);
}
<<<<<<< HEAD
)
// --- 2. ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô "‡πÄ‡∏ã‡∏ü‡∏•‡∏á‡∏ï‡∏π‡πâ‡πÄ‡∏ã‡∏ü" ---
// (‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡∏à‡∏∞‡∏£‡∏±‡∏ö "‡∏™‡∏°‡∏≠‡∏á" (Array) ‡∏ó‡∏±‡πâ‡∏á‡∏Å‡πâ‡∏≠‡∏ô‡∏°‡∏≤‡πÄ‡∏ã‡∏ü)
function saveTasksToMemory(tasksArray) {
    console.log("starMemory: Saving tasks to localStorage...", tasksArray);
    // ‡πÅ‡∏õ‡∏•‡∏á Array ‡πÄ‡∏õ‡πá‡∏ô JSON string
    localStorage.setItem(STORAGE_KEY, JSON.stringify(tasksArray));
}
=======

>>>>>>> 072244f7a877ca92dba6c78f1f9494b3fc7da993

// --- 4. "‡∏™‡πà‡∏á‡∏≠‡∏≠‡∏Å" (Export) ---
// (‡πÄ‡∏£‡∏≤‡∏à‡∏∞‡∏™‡πà‡∏á‡∏≠‡∏≠‡∏Å "‡πÅ‡∏û‡πá‡∏Å‡πÄ‡∏Å‡∏à" starMemory ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÉ‡∏´‡∏°‡πà)
window.starMemory = {
<<<<<<< HEAD
    loadTasks: loadTasksFromMemory,
    saveTasks: saveTasksToMemory
}; */
function initBottleApp(rootContainer) {
    console.log("initBottleApp() is called!");
    const container = rootContainer
        ? rootContainer.querySelector('#bottle-controller')
        : document.querySelector('#bottle-controller');
    if (!container) return;
  
    const btn = container.querySelector('#getQuoteBtn');
    const box = container.querySelector('#quoteBox');
  
    const quotes = [
      "‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡πÄ‡∏ò‡∏≠‡∏ó‡∏≥‡πÑ‡∏î‡πâ‡∏î‡∏µ‡∏°‡∏≤‡∏Å‡πÅ‡∏•‡πâ‡∏ß‡∏ô‡∏∞ üíñ",
      "‡∏û‡∏±‡∏Å‡∏´‡∏ô‡πà‡∏≠‡∏¢‡∏Å‡πá‡πÑ‡∏î‡πâ‡∏ô‡∏∞ ‡πÄ‡∏ò‡∏≠‡πÄ‡∏Å‡πà‡∏á‡∏°‡∏≤‡∏Å‡πÄ‡∏•‡∏¢ üå∑",
      "‡∏ó‡∏∏‡∏Å‡∏Å‡πâ‡∏≤‡∏ß‡πÄ‡∏•‡πá‡∏Å ‡πÜ ‡∏Å‡πá‡∏Ñ‡∏∑‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à ‚ú®",
      "‡∏≠‡∏¢‡πà‡∏≤‡∏•‡∏∑‡∏°‡∏¢‡∏¥‡πâ‡∏°‡πÉ‡∏´‡πâ‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á‡∏î‡πâ‡∏ß‡∏¢‡∏ô‡∏∞ üòä",
      "‡πÄ‡∏´‡∏ô‡∏∑‡πà‡∏≠‡∏¢‡∏Å‡πá‡∏û‡∏±‡∏Å ‡πÅ‡∏ï‡πà‡∏´‡πâ‡∏≤‡∏°‡∏´‡∏¢‡∏∏‡∏î‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡πÉ‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á üí™",
      "‡πÇ‡∏•‡∏Å‡∏¢‡∏±‡∏á‡∏°‡∏µ‡∏≠‡∏∞‡πÑ‡∏£‡∏î‡∏µ ‡πÜ ‡∏£‡∏≠‡πÉ‡∏´‡πâ‡πÄ‡∏ò‡∏≠‡πÄ‡∏à‡∏≠‡∏≠‡∏¢‡∏π‡πà‡πÄ‡∏™‡∏°‡∏≠ üåà",
      "‡πÄ‡∏ò‡∏≠‡∏Ñ‡∏∑‡∏≠‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏î‡∏µ‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î‡∏Ç‡∏≠‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á‡πÅ‡∏•‡πâ‡∏ß üíú",
    ];
  
    btn.addEventListener('click', () => {
      const randomIndex = Math.floor(Math.random() * quotes.length);
      box.textContent = quotes[randomIndex];
    });
  }
  
  // ‡∏ñ‡πâ‡∏≤‡πÄ‡∏õ‡∏¥‡∏î‡∏´‡∏ô‡πâ‡∏≤‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á
  document.addEventListener('DOMContentLoaded', () => {
    if (document.querySelector('#bottle-controller')) initBottleApp();
  });
  
  // export ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö popup
  window.initBottleApp = initBottleApp;
  
=======
    loadActiveTasks: loadActiveTasks,
    saveActiveTasks: saveActiveTasks,
    loadArchivedTasks: loadArchivedTasks,
    archiveTasks: archiveTasks // üåü ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÉ‡∏´‡∏°‡πà
};
>>>>>>> 072244f7a877ca92dba6c78f1f9494b3fc7da993
